package com.vc.sasnmodel;


import com.oracle.adffwkextensions.utils.DateUtils;

import com.vc.sasnmodel.beans.NewsOthersBean;
import com.vc.sasnmodel.common.PerpSasNewsAppModule;
import com.vc.sasnmodel.views.customize.common.C01DocumentDownloadsRow;
import com.vc.sasnmodel.views.customize.common.C01NewsOthersRow;
import com.vc.sasnmodel.views.sasn.common.GuestQuestionsRow;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;

import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.ArrayList;
import java.util.List;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewLinkImpl;

import com.vc.sasnmodel.beans.NewsOthersBean;
import com.vc.sasnmodel.views.sasn.common.ContactInfosViewRow;

import oracle.jbo.domain.Sequence;
import oracle.jbo.server.ViewObjectImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 04 22:14:48 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PerpSasNewsAppModuleImpl extends ApplicationModuleImpl implements PerpSasNewsAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public PerpSasNewsAppModuleImpl() {
    }


    /**
     * Trong cac bang Customers , Parners , ImageResources co cot du lieu BLOB
     * chua thong tin Image . Muc tieu la phai generated no ra file Image truoc khi
     * ung dung duoc chay .
     *
     * @param realPath : Duong dan den thu muc trien khai Project tren server .
     */
    public void generateImageFromBlobDatas(String realPath) {
        this.generateImage("Select cus_id,image from customers", realPath,
                           SasnImgConstants.RELATIVE_IMG_CUSTOMER_DIR);
        this.generateImage("Select par_id,image from partners", realPath,
                           SasnImgConstants.RELATIVE_IMG_PARTNER_DIR);
    }


    private void generateImage(String sql, String realPath,
                               String relativePath) {
        DBTransaction transaction = this.getDBTransaction();
        PreparedStatement pstm = null;
        ResultSet rs = null;
        String dirImgPath = realPath + "/" + relativePath;
        System.out.println("Startting generate image into directory: " +
                           dirImgPath);
        File file = new File(dirImgPath);
        file.mkdirs();
        InputStream is = null;
        FileOutputStream fos = null;
        String fname = null;
        int i = -1;
        byte[] bytes = new byte[1024];
        try {
            pstm = transaction.createPreparedStatement(sql, 0);
            rs = pstm.executeQuery();

            while (rs.next()) {
                fname = rs.getString(1) + ".jpg";
                file = new File(dirImgPath + "/" + fname);
                if (!file.exists()) {
                    try {
                        Blob blob = rs.getBlob(2);
                        if (blob != null) {
                            System.out.println("Generate file :" + fname);
                            is = blob.getBinaryStream();
                            fos = new FileOutputStream(file);
                            while ((i = is.read(bytes)) > 0) {
                                fos.write(bytes, 0, i);
                            }
                            is.close();
                            fos.close();
                        }
                    } catch (Exception e) {
                        System.out.println("Error generate image :" + e);
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println("Error :" + e);
        } finally {
            this.close(rs);
            this.close(pstm);
        }
    }

    private void close(ResultSet rs) {
        try {
            rs.close();
        } catch (Exception e) {
        }
    }

    private void close(PreparedStatement pstm) {
        try {
            pstm.close();
        } catch (Exception e) {
        }
    }

    /**
     * Container's getter for Sasn01Introductions.
     * @return Sasn01Introductions
     */
    public ViewObjectImpl getSasn01Introductions() {
        return (ViewObjectImpl)findViewObject("Sasn01Introductions");
    }

    /**
     * Container's getter for Sasn02C01Products.
     * @return Sasn02C01Products
     */
    public ViewObjectImpl getSasn02C01Products() {
        return (ViewObjectImpl)findViewObject("Sasn02C01Products");
    }

    /**
     * Container's getter for Sasn03ConsultantCategories.
     * @return Sasn03ConsultantCategories
     */
    public ViewObjectImpl getSasn03ConsultantCategories() {
        return (ViewObjectImpl)findViewObject("Sasn03ConsultantCategories");
    }


    /**
     * Container's getter for Sasn03ConsultantsListInConsultantCategories.
     * @return Sasn03ConsultantsListInConsultantCategories
     */
    public ViewObjectImpl getSasn03ConsultantsListInConsultantCategories() {
        return (ViewObjectImpl)findViewObject("Sasn03ConsultantsListInConsultantCategories");
    }

    /**
     * Container's getter for Consultant_ConsultantCategories1.
     * @return Consultant_ConsultantCategories1
     */
    public ViewLinkImpl getConsultant_ConsultantCategories1() {
        return (ViewLinkImpl)findViewLink("Consultant_ConsultantCategories1");
    }


    /**
     * Container's getter for Sasn05Services.
     * @return Sasn05Services
     */
    public ViewObjectImpl getSasn05Services() {
        return (ViewObjectImpl)findViewObject("Sasn05Services");
    }

    /**
     * Container's getter for Sasn06PartnerGroups.
     * @return Sasn06PartnerGroups
     */
    public ViewObjectImpl getSasn06PartnerGroups() {
        return (ViewObjectImpl)findViewObject("Sasn06PartnerGroups");
    }

    /**
     * Container's getter for Sasn06PartnersListInPartnerGroups.
     * @return Sasn06PartnersListInPartnerGroups
     */
    public ViewObjectImpl getSasn06PartnersListInPartnerGroups() {
        return (ViewObjectImpl)findViewObject("Sasn06PartnersListInPartnerGroups");
    }

    /**
     * Container's getter for Partners_PartnerGroups1.
     * @return Partners_PartnerGroups1
     */
    public ViewLinkImpl getPartners_PartnerGroups1() {
        return (ViewLinkImpl)findViewLink("Partners_PartnerGroups1");
    }

    /**
     * Container's getter for Sasn07Industries.
     * @return Sasn07Industries
     */
    public ViewObjectImpl getSasn07Industries() {
        return (ViewObjectImpl)findViewObject("Sasn07Industries");
    }

    /**
     * Container's getter for Sasn07CustomersListInIndustries.
     * @return Sasn07CustomersListInIndustries
     */
    public ViewObjectImpl getSasn07CustomersListInIndustries() {
        return (ViewObjectImpl)findViewObject("Sasn07CustomersListInIndustries");
    }

    /**
     * Container's getter for Customers_Industries1.
     * @return Customers_Industries1
     */
    public ViewLinkImpl getCustomers_Industries1() {
        return (ViewLinkImpl)findViewLink("Customers_Industries1");
    }


    /**
     * Container's getter for Sasn08C01NewsOthers.
     * @return Sasn08C01NewsOthers
     */
    public ViewObjectImpl getSasn08C01NewsOthers() {
        return (ViewObjectImpl)findViewObject("Sasn08C01NewsOthers");
    }


    public void prepareToShowNewsOthers(String notNumber) {
        ViewObjectImpl view = this.getSasn08C01NewsOthers();
        view.setNamedWhereClauseParam("p_Not_Number", notNumber);
        System.out.println("notNumber =" + notNumber);
        view.executeQuery();
    }

    /**
     * Container's getter for Sasn09DocumentCategories.
     * @return Sasn09DocumentCategories
     */
    public ViewObjectImpl getSasn09DocumentCategories() {
        return (ViewObjectImpl)findViewObject("Sasn09DocumentCategories");
    }

    /**
     * Container's getter for Sasn09DocumentDownloadsListInDocumentCategories.
     * @return Sasn09DocumentDownloadsListInDocumentCategories
     */
    public ViewObjectImpl getSasn09DocumentDownloadsListInDocumentCategories() {
        return (ViewObjectImpl)findViewObject("Sasn09DocumentDownloadsListInDocumentCategories");
    }

    /**
     * Container's getter for DocumentDownloads_DocumentCategories1.
     * @return DocumentDownloads_DocumentCategories1
     */
    public ViewLinkImpl getDocumentDownloads_DocumentCategories1() {
        return (ViewLinkImpl)findViewLink("DocumentDownloads_DocumentCategories1");
    }


    public void createGuestQuestion(String title, String content,
                                    oracle.jbo.domain.Number agrId,
                                    String guestEmail, String guestPhone) {
        ViewObjectImpl view = this.getSasn10GuestQuestions();
        GuestQuestionsRow row = (GuestQuestionsRow)view.createRow();
        row.setAgrId(agrId);
        row.setTitle(title);
        row.setContent(content);
        row.setGuestEmail(guestEmail);
        row.setGuestTelephone(guestPhone);
        this.getDBTransaction().commit();
    }

    /**
     * Container's getter for Sasn10AnswerGroups.
     * @return Sasn10AnswerGroups
     */
    public ViewObjectImpl getSasn10AnswerGroups() {
        return (ViewObjectImpl)findViewObject("Sasn10AnswerGroups");
    }

    /**
     * Container's getter for Sasn10GuestQuestions.
     * @return Sasn10GuestQuestions
     */
    public ViewObjectImpl getSasn10GuestQuestions() {
        return (ViewObjectImpl)findViewObject("Sasn10GuestQuestions");
    }

    /**
     * Container's getter for Sasn11AnswerGroups.
     * @return Sasn11AnswerGroups
     */
    public ViewObjectImpl getSasn11AnswerGroups() {
        return (ViewObjectImpl)findViewObject("Sasn11AnswerGroups");
    }

    /**
     * Container's getter for Sasn11C01OnlineHelpsListInAnswerGroups.
     * @return Sasn11C01OnlineHelpsListInAnswerGroups
     */
    public ViewObjectImpl getSasn11C01OnlineHelpsListInAnswerGroups() {
        return (ViewObjectImpl)findViewObject("Sasn11C01OnlineHelpsListInAnswerGroups");
    }

    /**
     * Container's getter for C01OnlineHelps_AnswerGroups1.
     * @return C01OnlineHelps_AnswerGroups1
     */
    public ViewLinkImpl getC01OnlineHelps_AnswerGroups1() {
        return (ViewLinkImpl)findViewLink("C01OnlineHelps_AnswerGroups1");
    }


    /**
     * Container's getter for Sasn11OnlineHelpTypesP01.
     * @return Sasn11OnlineHelpTypesP01
     */
    public ViewObjectImpl getSasn11OnlineHelpTypesP01() {
        return (ViewObjectImpl)findViewObject("Sasn11OnlineHelpTypesP01");
    }

    /**
     * Container's getter for C01OnlineHelps_OnlineHelpTypes1.
     * @return C01OnlineHelps_OnlineHelpTypes1
     */
    public ViewLinkImpl getC01OnlineHelps_OnlineHelpTypes1() {
        return (ViewLinkImpl)findViewLink("C01OnlineHelps_OnlineHelpTypes1");
    }


    /**
     * Container's getter for Sasn12C01DocumentDownloads.
     * @return Sasn12C01DocumentDownloads
     */
    public ViewObjectImpl getSasn12C01DocumentDownloads() {
        return (ViewObjectImpl)findViewObject("Sasn12C01DocumentDownloads");
    }

    public C01DocumentDownloadsRow getDocumentDownloadById(oracle.jbo.domain.Number ddoId) {
        ViewObjectImpl view = this.getSasn12C01DocumentDownloads();
        view.setNamedWhereClauseParam("p_Ddo_Id", ddoId);
        view.executeQuery();
        Row[] rows = view.getAllRowsInRange();
        if (rows != null && rows.length > 0) {
            return (C01DocumentDownloadsRow)rows[0];
        }
        return null;
    }

    public void increaseDocumentDownloadCount(oracle.jbo.domain.Number ddoId) {
        C01DocumentDownloadsRow row = this.getDocumentDownloadById(ddoId);
        row.setDownloadCount(row.getDownloadCount().add(1));
        this.getDBTransaction().commit();
    }

    /**
     * Container's getter for Sasn13C02Products.
     * @return Sasn13C02Products
     */
    public ViewObjectImpl getSasn13C02Products() {
        return (ViewObjectImpl)findViewObject("Sasn13C02Products");
    }

    /**
     * Container's getter for Sasn14OnlineHelps.
     * @return Sasn14OnlineHelps
     */
    public ViewObjectImpl getSasn14OnlineHelps() {
        return (ViewObjectImpl)findViewObject("Sasn14OnlineHelps");
    }

    /**
     * Container's getter for Sasn14AnswerGroupsInOnlineHelps.
     * @return Sasn14AnswerGroupsInOnlineHelps
     */
    public ViewObjectImpl getSasn14AnswerGroupsInOnlineHelps() {
        return (ViewObjectImpl)findViewObject("Sasn14AnswerGroupsInOnlineHelps");
    }

    /**
     * Container's getter for OnlineHelps_AnswerGroups1.
     * @return OnlineHelps_AnswerGroups1
     */
    public ViewLinkImpl getOnlineHelps_AnswerGroups1() {
        return (ViewLinkImpl)findViewLink("OnlineHelps_AnswerGroups1");
    }

    /**
     * Container's getter for Sasn14OnlineHelpTypesInOnlineHelps.
     * @return Sasn14OnlineHelpTypesInOnlineHelps
     */
    public ViewObjectImpl getSasn14OnlineHelpTypesInOnlineHelps() {
        return (ViewObjectImpl)findViewObject("Sasn14OnlineHelpTypesInOnlineHelps");
    }

    /**
     * Container's getter for OnlineHelps_OnlineHelpTypes1.
     * @return OnlineHelps_OnlineHelpTypes1
     */
    public ViewLinkImpl getOnlineHelps_OnlineHelpTypes1() {
        return (ViewLinkImpl)findViewLink("OnlineHelps_OnlineHelpTypes1");
    }

    /**
     * Container's getter for LovOnlineHelpTypes.
     * @return LovOnlineHelpTypes
     */
    public ViewObjectImpl getLovOnlineHelpTypes() {
        return (ViewObjectImpl)findViewObject("LovOnlineHelpTypes");
    }

    /**
     * Container's getter for LovAnswerGroups.
     * @return LovAnswerGroups
     */
    public ViewObjectImpl getLovAnswerGroups() {
        return (ViewObjectImpl)findViewObject("LovAnswerGroups");
    }

    /**
     * Container's getter for Sasn04NewsCategories.
     * @return Sasn04NewsCategories
     */
    public ViewObjectImpl getSasn04NewsCategories() {
        return (ViewObjectImpl)findViewObject("Sasn04NewsCategories");
    }

    /**
     * Container's getter for Sasn04NewsListInNewsCategories.
     * @return Sasn04NewsListInNewsCategories
     */
    public ViewObjectImpl getSasn04NewsListInNewsCategories() {
        return (ViewObjectImpl)findViewObject("Sasn04NewsListInNewsCategories");
    }

    /**
     * Container's getter for News_NewsCategories1.
     * @return News_NewsCategories1
     */
    public ViewLinkImpl getNews_NewsCategories1() {
        return (ViewLinkImpl)findViewLink("News_NewsCategories1");
    }

    public List<C01NewsOthersRow> getC01NewsOthers(String notNumber) {
        ViewObjectImpl view = this.getSasn08C01NewsOthers();
        view.setNamedWhereClauseParam("p_Not_Number", notNumber);
        view.executeQuery();
        RowSet set = view.getRowSet();

        List<C01NewsOthersRow> list = new ArrayList<C01NewsOthersRow>();
        while (set.hasNext()) {
            C01NewsOthersRow row = (C01NewsOthersRow)set.next();
            list.add(row);
        }
        return list;
    }


    public C01NewsOthersRow getC01NewsOthersByCode(String notNumber) {
        ViewObjectImpl view = this.getSasn08C01NewsOthers();
        view.setNamedWhereClauseParam("p_Not_Number", notNumber);
        view.executeQuery();
        RowSet set = view.getRowSet();
        while (set.hasNext()) {
            C01NewsOthersRow row = (C01NewsOthersRow)set.next();
            return row;
        }
        return null;
    }

    public void saveNewsOthersBean(NewsOthersBean newsOthers) {
        if (newsOthers == null) {
            return;
        }
        String notNumber = newsOthers.getNotNumber();
        if (notNumber == null || notNumber.trim().equals("")) {
            notNumber = null;
        } else {
            notNumber = notNumber.trim().toUpperCase();
        }
        if (notNumber != null) {
            C01NewsOthersRow row = getC01NewsOthersByCode(notNumber);
            if (row != null) {
                row.setContent(newsOthers.getContent());
                row.setDescription(newsOthers.getDescription());
                row.setTitle(newsOthers.getTitle());
            } else {
                ViewObjectImpl view = this.getSasn08C01NewsOthers();
                row = (C01NewsOthersRow)view.createRow();
                row.setContent(newsOthers.getContent());
                row.setDescription(newsOthers.getDescription());
                row.setTitle(newsOthers.getTitle());
                row.setNotNumber(newsOthers.getNotNumber());
                // Not_Id se duoc tao trong Entity
            }
            this.getDBTransaction().commit();
        }

    }

    /**
     * Container's getter for ContactInfosView1.
     * @return ContactInfosView1
     */
    public ViewObjectImpl getContactInfosView1() {
        return (ViewObjectImpl)findViewObject("ContactInfosView1");
    }

    public boolean insertContactInfo(String contactName, String companyName,
                                     String address, String phoneNumber,
                                     String email, String content,
                                     String confirmCode, String createBy) {
        try {
            ViewObjectImpl view = this.getContactInfosView1();
            ContactInfosViewRow row = (ContactInfosViewRow)view.createRow();
            Sequence cinSeq = new Sequence("Cin_Seq", this);
            oracle.jbo.domain.Number cinId =
                new oracle.jbo.domain.Number(cinSeq.getValue());
            row.setCinId(cinId);
            row.setContactName(contactName);
            row.setCompanyName(companyName);
            row.setAddress(address);
            row.setPhoneNumber(phoneNumber);
            row.setEmailAddress(email);
            row.setContent(content);
            row.setConfirmCode(confirmCode);
            row.setCreateDate(DateUtils.getOracleSysdate());
            row.setCreatedBy(createBy);
            view.insertRow(row);
            this.getDBTransaction().commit();
            return true;
        } catch (Exception ex) {
            System.out.print(ex.getMessage());
        }
        return false;
    }

    public void prepareToShowConsultantByCcaId(Number CcaId) {
        if (CcaId != null) {
            ViewObjectImpl view =
                this.getSasn03ConsultantsListInConsultantCategories();
            view.setNamedWhereClauseParam("p_Cca_Id", CcaId);
            view.executeQuery();
        }
    }


    /**
     * Container's getter for DocumentCategoriesRoot1.
     * @return DocumentCategoriesRoot1
     */
    public ViewObjectImpl getDocumentCategoriesRoot1() {
        return (ViewObjectImpl)findViewObject("DocumentCategoriesRoot1");
    }

    /**
     * Container's getter for DocumentCategories1.
     * @return DocumentCategories1
     */
    public ViewObjectImpl getDocumentCategories1() {
        return (ViewObjectImpl)findViewObject("DocumentCategories1");
    }

    /**
     * Container's getter for DocumentCategories_DocumentCategoriesRoot1.
     * @return DocumentCategories_DocumentCategoriesRoot1
     */
    public ViewLinkImpl getDocumentCategories_DocumentCategoriesRoot() {
        return (ViewLinkImpl)findViewLink("DocumentCategories_DocumentCategoriesRoot");
    }

    /**
     * Container's getter for DocumentDownloads1.
     * @return DocumentDownloads1
     */
    public ViewObjectImpl getDocumentDownloadsListByDocumentCategory() {
        return (ViewObjectImpl)findViewObject("DocumentDownloadsListByDocumentCategory");
    }

    public void prepareToShowDocumentDownloadByDcaId(Number DcaId) {
        ViewObjectImpl view =
            this.getDocumentDownloadsListByDocumentCategory();
        view.setNamedWhereClauseParam("p_Dca_Id", DcaId);
        view.executeQuery();

    }

    /**
     * Container's getter for DocumentCategories_DocumentCategoriesRoot1.
     * @return DocumentCategories_DocumentCategoriesRoot1
     */
    public ViewLinkImpl getDocumentCategories_DocumentCategoriesRoot1() {
        return (ViewLinkImpl)findViewLink("DocumentCategories_DocumentCategoriesRoot1");
    }

    public void prepareToShowServiceBySerId(Number SerId) {
      ViewObjectImpl view =
          this.getC01ServicesListBySerId();
      view.setNamedWhereClauseParam("p_Ser_Id", SerId);
      view.executeQuery();
    }

    /**
     * Container's getter for C01Services1.
     * @return C01Services1
     */
    public ViewObjectImpl getC01ServicesListBySerId() {
        return (ViewObjectImpl)findViewObject("C01ServicesListBySerId");
    }

    /**
     * Container's getter for ServicesRoot.
     * @return ServicesRoot
     */
    public ViewObjectImpl getServicesRoot() {
        return (ViewObjectImpl)findViewObject("ServicesRoot");
    }

    /**
     * Container's getter for ChildOfServices.
     * @return ChildOfServices
     */
    public ViewObjectImpl getChildOfServices() {
        return (ViewObjectImpl)findViewObject("ChildOfServices");
    }

    /**
     * Container's getter for Services_ServicesRoot.
     * @return Services_ServicesRoot
     */
    public ViewLinkImpl getServices_ServicesRoot() {
        return (ViewLinkImpl)findViewLink("Services_ServicesRoot");
    }
}
