package com.vc.sasnmodel.views.sasn;

import com.vc.sasnmodel.entities.ContactInfosImpl;

import com.vc.sasnmodel.views.sasn.common.ContactInfosViewRow;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 07 11:49:04 ICT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContactInfosViewRowImpl extends ViewRowImpl implements ContactInfosViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Address {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAddress();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        CinId {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getCinId();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setCinId((Number)value);
            }
        }
        ,
        CompanyName {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getCompanyName();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setCompanyName((String)value);
            }
        }
        ,
        ConfirmCode {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getConfirmCode();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setConfirmCode((String)value);
            }
        }
        ,
        ContactName {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getContactName();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setContactName((String)value);
            }
        }
        ,
        Content {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getContent();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setContent((String)value);
            }
        }
        ,
        Country {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getCountry();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreateDate {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setCreateDate((Date)value);
            }
        }
        ,
        EmailAddress {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        ModifyDate {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getModifyDate();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setModifyDate((Date)value);
            }
        }
        ,
        PhoneNumber {
            public Object get(ContactInfosViewRowImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(ContactInfosViewRowImpl obj, Object value) {
                obj.setPhoneNumber((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContactInfosViewRowImpl object);

        public abstract void put(ContactInfosViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int CINID = AttributesEnum.CinId.index();
    public static final int COMPANYNAME = AttributesEnum.CompanyName.index();
    public static final int CONFIRMCODE = AttributesEnum.ConfirmCode.index();
    public static final int CONTACTNAME = AttributesEnum.ContactName.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContactInfosViewRowImpl() {
    }

    /**
     * Gets ContactInfos entity object.
     * @return the ContactInfos
     */
    public ContactInfosImpl getContactInfos() {
        return (ContactInfosImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for CIN_ID using the alias name CinId.
     * @return the CIN_ID
     */
    public Number getCinId() {
        return (Number) getAttributeInternal(CINID);
    }

    /**
     * Sets <code>value</code> as attribute value for CIN_ID using the alias name CinId.
     * @param value value to set the CIN_ID
     */
    public void setCinId(Number value) {
        setAttributeInternal(CINID, value);
    }

    /**
     * Gets the attribute value for COMPANY_NAME using the alias name CompanyName.
     * @return the COMPANY_NAME
     */
    public String getCompanyName() {
        return (String) getAttributeInternal(COMPANYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANY_NAME using the alias name CompanyName.
     * @param value value to set the COMPANY_NAME
     */
    public void setCompanyName(String value) {
        setAttributeInternal(COMPANYNAME, value);
    }

    /**
     * Gets the attribute value for CONFIRM_CODE using the alias name ConfirmCode.
     * @return the CONFIRM_CODE
     */
    public String getConfirmCode() {
        return (String) getAttributeInternal(CONFIRMCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CONFIRM_CODE using the alias name ConfirmCode.
     * @param value value to set the CONFIRM_CODE
     */
    public void setConfirmCode(String value) {
        setAttributeInternal(CONFIRMCODE, value);
    }

    /**
     * Gets the attribute value for CONTACT_NAME using the alias name ContactName.
     * @return the CONTACT_NAME
     */
    public String getContactName() {
        return (String) getAttributeInternal(CONTACTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTACT_NAME using the alias name ContactName.
     * @param value value to set the CONTACT_NAME
     */
    public void setContactName(String value) {
        setAttributeInternal(CONTACTNAME, value);
    }

    /**
     * Gets the attribute value for CONTENT using the alias name Content.
     * @return the CONTENT
     */
    public String getContent() {
        return (String) getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT using the alias name Content.
     * @param value value to set the CONTENT
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for COUNTRY using the alias name Country.
     * @return the COUNTRY
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY using the alias name Country.
     * @param value value to set the COUNTRY
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for EMAIL_ADDRESS using the alias name EmailAddress.
     * @return the EMAIL_ADDRESS
     */
    public String getEmailAddress() {
        return (String) getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL_ADDRESS using the alias name EmailAddress.
     * @param value value to set the EMAIL_ADDRESS
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @return the MODIFY_DATE
     */
    public Date getModifyDate() {
        return (Date) getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @param value value to set the MODIFY_DATE
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @return the PHONE_NUMBER
     */
    public String getPhoneNumber() {
        return (String) getAttributeInternal(PHONENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @param value value to set the PHONE_NUMBER
     */
    public void setPhoneNumber(String value) {
        setAttributeInternal(PHONENUMBER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
