package com.vc.sasnmodel.views.sasn;

import com.vc.sasnmodel.entities.ConsultantsImpl;

import com.vc.sasnmodel.views.sasn.common.ConsultantsRow;

import oracle.jbo.Row;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 22 00:10:50 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultantsRowImpl extends ViewRowImpl implements ConsultantsRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ConId {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getConId();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setConId((Number)value);
            }
        }
        ,
        CcaId {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getCcaId();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setCcaId((Number)value);
            }
        }
        ,
        Question {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getQuestion();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setQuestion((String)value);
            }
        }
        ,
        Answer {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getAnswer();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setAnswer((ClobDomain)value);
            }
        }
        ,
        CreateDate {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getCreateDate();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setCreateDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        ModifyDate {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getModifyDate();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setModifyDate((Date)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        Description {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getDescription();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        ShortAnswer {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getShortAnswer();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setShortAnswer((String)value);
            }
        }
        ,
        PriorityOrder {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getPriorityOrder();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setPriorityOrder((Number)value);
            }
        }
        ,
        ConsultantCategories {
            public Object get(ConsultantsRowImpl obj) {
                return obj.getConsultantCategories();
            }

            public void put(ConsultantsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ConsultantsRowImpl object);

        public abstract void put(ConsultantsRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CONID = AttributesEnum.ConId.index();
    public static final int CCAID = AttributesEnum.CcaId.index();
    public static final int QUESTION = AttributesEnum.Question.index();
    public static final int ANSWER = AttributesEnum.Answer.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int SHORTANSWER = AttributesEnum.ShortAnswer.index();
    public static final int PRIORITYORDER = AttributesEnum.PriorityOrder.index();
    public static final int CONSULTANTCATEGORIES = AttributesEnum.ConsultantCategories.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ConsultantsRowImpl() {
    }

    /**
     * Gets Consultants entity object.
     * @return the Consultants
     */
    public ConsultantsImpl getConsultants() {
        return (ConsultantsImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for CON_ID using the alias name ConId.
     * @return the CON_ID
     */
    public Number getConId() {
        return (Number) getAttributeInternal(CONID);
    }

    /**
     * Sets <code>value</code> as attribute value for CON_ID using the alias name ConId.
     * @param value value to set the CON_ID
     */
    public void setConId(Number value) {
        setAttributeInternal(CONID, value);
    }

    /**
     * Gets the attribute value for CCA_ID using the alias name CcaId.
     * @return the CCA_ID
     */
    public Number getCcaId() {
        return (Number) getAttributeInternal(CCAID);
    }

    /**
     * Sets <code>value</code> as attribute value for CCA_ID using the alias name CcaId.
     * @param value value to set the CCA_ID
     */
    public void setCcaId(Number value) {
        setAttributeInternal(CCAID, value);
    }

    /**
     * Gets the attribute value for QUESTION using the alias name Question.
     * @return the QUESTION
     */
    public String getQuestion() {
        return (String) getAttributeInternal(QUESTION);
    }

    /**
     * Sets <code>value</code> as attribute value for QUESTION using the alias name Question.
     * @param value value to set the QUESTION
     */
    public void setQuestion(String value) {
        setAttributeInternal(QUESTION, value);
    }

    /**
     * Gets the attribute value for ANSWER using the alias name Answer.
     * @return the ANSWER
     */
    public ClobDomain getAnswer() {
        return (ClobDomain) getAttributeInternal(ANSWER);
    }

    /**
     * Sets <code>value</code> as attribute value for ANSWER using the alias name Answer.
     * @param value value to set the ANSWER
     */
    public void setAnswer(ClobDomain value) {
        setAttributeInternal(ANSWER, value);
    }

    /**
     * Gets the attribute value for CREATE_DATE using the alias name CreateDate.
     * @return the CREATE_DATE
     */
    public Date getCreateDate() {
        return (Date) getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_DATE using the alias name CreateDate.
     * @param value value to set the CREATE_DATE
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @return the MODIFY_DATE
     */
    public Date getModifyDate() {
        return (Date) getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFY_DATE using the alias name ModifyDate.
     * @param value value to set the MODIFY_DATE
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for SHORT_ANSWER using the alias name ShortAnswer.
     * @return the SHORT_ANSWER
     */
    public String getShortAnswer() {
        return (String) getAttributeInternal(SHORTANSWER);
    }

    /**
     * Sets <code>value</code> as attribute value for SHORT_ANSWER using the alias name ShortAnswer.
     * @param value value to set the SHORT_ANSWER
     */
    public void setShortAnswer(String value) {
        setAttributeInternal(SHORTANSWER, value);
    }

    /**
     * Gets the attribute value for PRIORITY_ORDER using the alias name PriorityOrder.
     * @return the PRIORITY_ORDER
     */
    public Number getPriorityOrder() {
        return (Number) getAttributeInternal(PRIORITYORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY_ORDER using the alias name PriorityOrder.
     * @param value value to set the PRIORITY_ORDER
     */
    public void setPriorityOrder(Number value) {
        setAttributeInternal(PRIORITYORDER, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ConsultantCategories.
     */
    public Row getConsultantCategories() {
        return (Row)getAttributeInternal(CONSULTANTCATEGORIES);
    }

    /**
     * Sets the master-detail link ConsultantCategories between this object and <code>value</code>.
     */
    public void setConsultantCategories(Row value) {
        setAttributeInternal(CONSULTANTCATEGORIES, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
