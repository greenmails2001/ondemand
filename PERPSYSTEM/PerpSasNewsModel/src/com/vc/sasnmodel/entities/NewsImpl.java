package com.vc.sasnmodel.entities;

import com.oracle.adffwkextensions.utils.DateUtils;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 22 00:42:50 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NewsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        NewsId {
            public Object get(NewsImpl obj) {
                return obj.getNewsId();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setNewsId((Number)value);
            }
        },
        NcaId {
            public Object get(NewsImpl obj) {
                return obj.getNcaId();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setNcaId((Number)value);
            }
        },
        Title {
            public Object get(NewsImpl obj) {
                return obj.getTitle();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        },
        Content {
            public Object get(NewsImpl obj) {
                return obj.getContent();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setContent((ClobDomain)value);
            }
        },
        PriorityLevel {
            public Object get(NewsImpl obj) {
                return obj.getPriorityLevel();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setPriorityLevel((Number)value);
            }
        },
        CreateDate {
            public Object get(NewsImpl obj) {
                return obj.getCreateDate();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setCreateDate((Date)value);
            }
        },
        CreatedBy {
            public Object get(NewsImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        ModifyDate {
            public Object get(NewsImpl obj) {
                return obj.getModifyDate();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setModifyDate((Date)value);
            }
        },
        ModifiedBy {
            public Object get(NewsImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        },
        ShortContent {
            public Object get(NewsImpl obj) {
                return obj.getShortContent();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setShortContent((String)value);
            }
        },
        BookmarkCode {
            public Object get(NewsImpl obj) {
                return obj.getBookmarkCode();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setBookmarkCode((String)value);
            }
        },
        IreIdSmall {
            public Object get(NewsImpl obj) {
                return obj.getIreIdSmall();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setIreIdSmall((Number)value);
            }
        },
        IreIdMedium {
            public Object get(NewsImpl obj) {
                return obj.getIreIdMedium();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setIreIdMedium((Number)value);
            }
        },
        NewsDate {
            public Object get(NewsImpl obj) {
                return obj.getNewsDate();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setNewsDate((Date)value);
            }
        },
        NewsCategories {
            public Object get(NewsImpl obj) {
                return obj.getNewsCategories();
            }

            public void put(NewsImpl obj, Object value) {
                obj.setNewsCategories((EntityImpl)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(NewsImpl object);

        public abstract void put(NewsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int NEWSID = AttributesEnum.NewsId.index();
    public static final int NCAID = AttributesEnum.NcaId.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int PRIORITYLEVEL =
        AttributesEnum.PriorityLevel.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int SHORTCONTENT = AttributesEnum.ShortContent.index();
    public static final int BOOKMARKCODE = AttributesEnum.BookmarkCode.index();
    public static final int IREIDSMALL = AttributesEnum.IreIdSmall.index();
    public static final int IREIDMEDIUM = AttributesEnum.IreIdMedium.index();
    public static final int NEWSDATE = AttributesEnum.NewsDate.index();
    public static final int NEWSCATEGORIES =
        AttributesEnum.NewsCategories.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NewsImpl() {
    }

    /**
     * Gets the attribute value for NewsId, using the alias name NewsId.
     * @return the NewsId
     */
    public Number getNewsId() {
        return (Number)getAttributeInternal(NEWSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewsId.
     * @param value value to set the NewsId
     */
    public void setNewsId(Number value) {
        setAttributeInternal(NEWSID, value);
    }

    /**
     * Gets the attribute value for NcaId, using the alias name NcaId.
     * @return the NcaId
     */
    public Number getNcaId() {
        return (Number)getAttributeInternal(NCAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NcaId.
     * @param value value to set the NcaId
     */
    public void setNcaId(Number value) {
        setAttributeInternal(NCAID, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Content, using the alias name Content.
     * @return the Content
     */
    public ClobDomain getContent() {
        return (ClobDomain)getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Content.
     * @param value value to set the Content
     */
    public void setContent(ClobDomain value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for PriorityLevel, using the alias name PriorityLevel.
     * @return the PriorityLevel
     */
    public Number getPriorityLevel() {
        return (Number)getAttributeInternal(PRIORITYLEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriorityLevel.
     * @param value value to set the PriorityLevel
     */
    public void setPriorityLevel(Number value) {
        setAttributeInternal(PRIORITYLEVEL, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the CreateDate
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreateDate.
     * @param value value to set the CreateDate
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for ModifyDate, using the alias name ModifyDate.
     * @return the ModifyDate
     */
    public Date getModifyDate() {
        return (Date)getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifyDate.
     * @param value value to set the ModifyDate
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String)getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedBy.
     * @param value value to set the ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ShortContent, using the alias name ShortContent.
     * @return the ShortContent
     */
    public String getShortContent() {
        return (String)getAttributeInternal(SHORTCONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShortContent.
     * @param value value to set the ShortContent
     */
    public void setShortContent(String value) {
        setAttributeInternal(SHORTCONTENT, value);
    }

    /**
     * Gets the attribute value for BookmarkCode, using the alias name BookmarkCode.
     * @return the BookmarkCode
     */
    public String getBookmarkCode() {
        return (String)getAttributeInternal(BOOKMARKCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookmarkCode.
     * @param value value to set the BookmarkCode
     */
    public void setBookmarkCode(String value) {
        setAttributeInternal(BOOKMARKCODE, value);
    }

    /**
     * Gets the attribute value for IreIdSmall, using the alias name IreIdSmall.
     * @return the IreIdSmall
     */
    public Number getIreIdSmall() {
        return (Number)getAttributeInternal(IREIDSMALL);
    }

    /**
     * Sets <code>value</code> as the attribute value for IreIdSmall.
     * @param value value to set the IreIdSmall
     */
    public void setIreIdSmall(Number value) {
        setAttributeInternal(IREIDSMALL, value);
    }

    /**
     * Gets the attribute value for IreIdMedium, using the alias name IreIdMedium.
     * @return the IreIdMedium
     */
    public Number getIreIdMedium() {
        return (Number)getAttributeInternal(IREIDMEDIUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for IreIdMedium.
     * @param value value to set the IreIdMedium
     */
    public void setIreIdMedium(Number value) {
        setAttributeInternal(IREIDMEDIUM, value);
    }

    /**
     * Gets the attribute value for NewsDate, using the alias name NewsDate.
     * @return the NewsDate
     */
    public Date getNewsDate() {
        return (Date)getAttributeInternal(NEWSDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewsDate.
     * @param value value to set the NewsDate
     */
    public void setNewsDate(Date value) {
        setAttributeInternal(NEWSDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getNewsCategories() {
        return (EntityImpl)getAttributeInternal(NEWSCATEGORIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setNewsCategories(EntityImpl value) {
        setAttributeInternal(NEWSCATEGORIES, value);
    }

    /**
     * @param newsId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number newsId) {
        return new Key(new Object[] { newsId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("com.vc.sasnmodel.entities.News");
        }
        return mDefinitionObject;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            SequenceImpl seq =
                new SequenceImpl("NEWS_SEQ", this.getDBTransaction());
            Number newsId = seq.getSequenceNumber();
            this.setNewsId(newsId);
            this.setCreateDate(DateUtils.getOracleSysdate());
            this.setCreatedBy("hatv");
            super.doDML(operation, e);
        } else if (operation == DML_UPDATE) {
            this.setModifyDate(DateUtils.getOracleSysdate());
            this.setModifiedBy("hatv");
            super.doDML(operation, e);
        } else {
            super.doDML(operation, e);
        }
    }
}
