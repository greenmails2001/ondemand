package com.vc.sasnmodel.entities;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 13 17:44:53 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GuestQuestionsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GquId {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getGquId();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setGquId((Number)value);
            }
        },
        Title {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getTitle();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        },
        Content {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getContent();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setContent((String)value);
            }
        },
        QuestionDate {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getQuestionDate();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setQuestionDate((Date)value);
            }
        },
        GuestEmail {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getGuestEmail();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setGuestEmail((String)value);
            }
        },
        GuestTelephone {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getGuestTelephone();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setGuestTelephone((String)value);
            }
        },
        AgrId {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getAgrId();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setAgrId((Number)value);
            }
        },
        AnswerMail {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getAnswerMail();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setAnswerMail((String)value);
            }
        },
        AnswerFlag {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getAnswerFlag();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setAnswerFlag((String)value);
            }
        },
        AnswerGroups {
            public Object get(GuestQuestionsImpl obj) {
                return obj.getAnswerGroups();
            }

            public void put(GuestQuestionsImpl obj, Object value) {
                obj.setAnswerGroups((EntityImpl)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(GuestQuestionsImpl object);

        public abstract void put(GuestQuestionsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GQUID = AttributesEnum.GquId.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int QUESTIONDATE = AttributesEnum.QuestionDate.index();
    public static final int GUESTEMAIL = AttributesEnum.GuestEmail.index();
    public static final int GUESTTELEPHONE =
        AttributesEnum.GuestTelephone.index();
    public static final int AGRID = AttributesEnum.AgrId.index();
    public static final int ANSWERMAIL = AttributesEnum.AnswerMail.index();
    public static final int ANSWERFLAG = AttributesEnum.AnswerFlag.index();
    public static final int ANSWERGROUPS = AttributesEnum.AnswerGroups.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GuestQuestionsImpl() {
    }

    /**
     * Gets the attribute value for GquId, using the alias name GquId.
     * @return the GquId
     */
    public Number getGquId() {
        return (Number)getAttributeInternal(GQUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GquId.
     * @param value value to set the GquId
     */
    public void setGquId(Number value) {
        setAttributeInternal(GQUID, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Content, using the alias name Content.
     * @return the Content
     */
    public String getContent() {
        return (String)getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Content.
     * @param value value to set the Content
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for QuestionDate, using the alias name QuestionDate.
     * @return the QuestionDate
     */
    public Date getQuestionDate() {
        return (Date)getAttributeInternal(QUESTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuestionDate.
     * @param value value to set the QuestionDate
     */
    public void setQuestionDate(Date value) {
        setAttributeInternal(QUESTIONDATE, value);
    }

    /**
     * Gets the attribute value for GuestEmail, using the alias name GuestEmail.
     * @return the GuestEmail
     */
    public String getGuestEmail() {
        return (String)getAttributeInternal(GUESTEMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for GuestEmail.
     * @param value value to set the GuestEmail
     */
    public void setGuestEmail(String value) {
        setAttributeInternal(GUESTEMAIL, value);
    }

    /**
     * Gets the attribute value for GuestTelephone, using the alias name GuestTelephone.
     * @return the GuestTelephone
     */
    public String getGuestTelephone() {
        return (String)getAttributeInternal(GUESTTELEPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GuestTelephone.
     * @param value value to set the GuestTelephone
     */
    public void setGuestTelephone(String value) {
        setAttributeInternal(GUESTTELEPHONE, value);
    }

    /**
     * Gets the attribute value for AgrId, using the alias name AgrId.
     * @return the AgrId
     */
    public Number getAgrId() {
        return (Number)getAttributeInternal(AGRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgrId.
     * @param value value to set the AgrId
     */
    public void setAgrId(Number value) {
        setAttributeInternal(AGRID, value);
    }

    /**
     * Gets the attribute value for AnswerMail, using the alias name AnswerMail.
     * @return the AnswerMail
     */
    public String getAnswerMail() {
        return (String)getAttributeInternal(ANSWERMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnswerMail.
     * @param value value to set the AnswerMail
     */
    public void setAnswerMail(String value) {
        setAttributeInternal(ANSWERMAIL, value);
    }

    /**
     * Gets the attribute value for AnswerFlag, using the alias name AnswerFlag.
     * @return the AnswerFlag
     */
    public String getAnswerFlag() {
        return (String)getAttributeInternal(ANSWERFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnswerFlag.
     * @param value value to set the AnswerFlag
     */
    public void setAnswerFlag(String value) {
        setAttributeInternal(ANSWERFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAnswerGroups() {
        return (EntityImpl)getAttributeInternal(ANSWERGROUPS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAnswerGroups(EntityImpl value) {
        setAttributeInternal(ANSWERGROUPS, value);
    }

    /**
     * @param gquId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number gquId) {
        return new Key(new Object[] { gquId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("com.vc.sasnmodel.entities.GuestQuestions");
        }
        return mDefinitionObject;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            SequenceImpl seq =
                new SequenceImpl("GQU_SEQ", this.getDBTransaction());
            this.setGquId(seq.getSequenceNumber());
            this.setQuestionDate(new Date());
            super.doDML(operation, e);
        } else {
            super.doDML(operation, e);
        }
    }
}
