package com.vc.sasnmodel.entities;

import com.oracle.adffwkextensions.utils.DateUtils;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 16 09:36:59 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ServicesImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SerId {
            public Object get(ServicesImpl obj) {
                return obj.getSerId();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setSerId((Number)value);
            }
        }
        ,
        Title {
            public Object get(ServicesImpl obj) {
                return obj.getTitle();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Content {
            public Object get(ServicesImpl obj) {
                return obj.getContent();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setContent((ClobDomain)value);
            }
        }
        ,
        CreateDate {
            public Object get(ServicesImpl obj) {
                return obj.getCreateDate();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setCreateDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ServicesImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        ModifyDate {
            public Object get(ServicesImpl obj) {
                return obj.getModifyDate();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setModifyDate((Date)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(ServicesImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        Description {
            public Object get(ServicesImpl obj) {
                return obj.getDescription();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        PriorityOrder {
            public Object get(ServicesImpl obj) {
                return obj.getPriorityOrder();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setPriorityOrder((Number)value);
            }
        }
        ,
        SerIdChildOf {
            public Object get(ServicesImpl obj) {
                return obj.getSerIdChildOf();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setSerIdChildOf((Number)value);
            }
        }
        ,
        SerIdChildOfServices {
            public Object get(ServicesImpl obj) {
                return obj.getSerIdChildOfServices();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Services {
            public Object get(ServicesImpl obj) {
                return obj.getServices();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setServices((ServicesImpl)value);
            }
        }
        ,
        ServicesRoot {
            public Object get(ServicesImpl obj) {
                return obj.getServicesRoot();
            }

            public void put(ServicesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ServicesImpl object);

        public abstract void put(ServicesImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SERID = AttributesEnum.SerId.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int CREATEDATE = AttributesEnum.CreateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int MODIFYDATE = AttributesEnum.ModifyDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int PRIORITYORDER = AttributesEnum.PriorityOrder.index();
    public static final int SERIDCHILDOF = AttributesEnum.SerIdChildOf.index();
    public static final int SERIDCHILDOFSERVICES = AttributesEnum.SerIdChildOfServices.index();
    public static final int SERVICES = AttributesEnum.Services.index();
    public static final int SERVICESROOT = AttributesEnum.ServicesRoot.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ServicesImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.vc.sasnmodel.entities.Services");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for SerId, using the alias name SerId.
     * @return the SerId
     */
    public Number getSerId() {
        return (Number)getAttributeInternal(SERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SerId.
     * @param value value to set the SerId
     */
    public void setSerId(Number value) {
        setAttributeInternal(SERID, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Content, using the alias name Content.
     * @return the Content
     */
    public ClobDomain getContent() {
        return (ClobDomain)getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Content.
     * @param value value to set the Content
     */
    public void setContent(ClobDomain value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the CreateDate
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreateDate.
     * @param value value to set the CreateDate
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for ModifyDate, using the alias name ModifyDate.
     * @return the ModifyDate
     */
    public Date getModifyDate() {
        return (Date)getAttributeInternal(MODIFYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifyDate.
     * @param value value to set the ModifyDate
     */
    public void setModifyDate(Date value) {
        setAttributeInternal(MODIFYDATE, value);
    }

    /**
     * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String)getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedBy.
     * @param value value to set the ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for PriorityOrder, using the alias name PriorityOrder.
     * @return the PriorityOrder
     */
    public Number getPriorityOrder() {
        return (Number)getAttributeInternal(PRIORITYORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriorityOrder.
     * @param value value to set the PriorityOrder
     */
    public void setPriorityOrder(Number value) {
        setAttributeInternal(PRIORITYORDER, value);
    }

    /**
     * Gets the attribute value for SerIdChildOf, using the alias name SerIdChildOf.
     * @return the SerIdChildOf
     */
    public Number getSerIdChildOf() {
        return (Number)getAttributeInternal(SERIDCHILDOF);
    }

    /**
     * Sets <code>value</code> as the attribute value for SerIdChildOf.
     * @param value value to set the SerIdChildOf
     */
    public void setSerIdChildOf(Number value) {
        setAttributeInternal(SERIDCHILDOF, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSerIdChildOfServices() {
        return (RowIterator)getAttributeInternal(SERIDCHILDOFSERVICES);
    }

    /**
     * @return the associated entity ServicesImpl.
     */
    public ServicesImpl getServices() {
        return (ServicesImpl)getAttributeInternal(SERVICES);
    }

    /**
     * Sets <code>value</code> as the associated entity ServicesImpl.
     */
    public void setServices(ServicesImpl value) {
        setAttributeInternal(SERVICES, value);
    }


    /**
     * Uses the link Services_ServicesRoot to return rows of Services
     */
    public ViewRowImpl getServicesRoot() {
        return (ViewRowImpl)getAttributeInternal(SERVICESROOT);
    }

    /**
     * @param serId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number serId) {
        return new Key(new Object[]{serId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {  
            SequenceImpl seq= new SequenceImpl("Ser_Seq",this.getDBTransaction());
            this.setAttributeInternal(SERID, seq.getSequenceNumber());
            this.setCreateDate(DateUtils.getOracleSysdate());           
            super.doDML(operation, e);
        } else if (operation == DML_UPDATE) {
            this.setModifyDate(DateUtils.getOracleSysdate());
            super.doDML(operation, e);
        } else {
            super.doDML(operation, e);
        }
    }
}
