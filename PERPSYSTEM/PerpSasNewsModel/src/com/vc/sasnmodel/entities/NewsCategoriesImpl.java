package com.vc.sasnmodel.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 12 17:42:10 ICT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NewsCategoriesImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        NcaId {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getNcaId();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setNcaId((Number)value);
            }
        }
        ,
        NcaIdParent {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getNcaIdParent();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setNcaIdParent((Number)value);
            }
        }
        ,
        Title {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getTitle();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Description {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getDescription();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        CategoryCode {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getCategoryCode();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setCategoryCode((String)value);
            }
        }
        ,
        PriorityOrder {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getPriorityOrder();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setPriorityOrder((Number)value);
            }
        }
        ,
        NewsCategories {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getNewsCategories();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        NcaIdParentNewsCategories {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getNcaIdParentNewsCategories();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setNcaIdParentNewsCategories((NewsCategoriesImpl)value);
            }
        }
        ,
        News {
            public Object get(NewsCategoriesImpl obj) {
                return obj.getNews();
            }

            public void put(NewsCategoriesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(NewsCategoriesImpl object);

        public abstract void put(NewsCategoriesImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int NCAID = AttributesEnum.NcaId.index();
    public static final int NCAIDPARENT = AttributesEnum.NcaIdParent.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CATEGORYCODE = AttributesEnum.CategoryCode.index();
    public static final int PRIORITYORDER = AttributesEnum.PriorityOrder.index();
    public static final int NEWSCATEGORIES = AttributesEnum.NewsCategories.index();
    public static final int NCAIDPARENTNEWSCATEGORIES = AttributesEnum.NcaIdParentNewsCategories.index();
    public static final int NEWS = AttributesEnum.News.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NewsCategoriesImpl() {
    }

    /**
     * Gets the attribute value for NcaId, using the alias name NcaId.
     * @return the NcaId
     */
    public Number getNcaId() {
        return (Number)getAttributeInternal(NCAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NcaId.
     * @param value value to set the NcaId
     */
    public void setNcaId(Number value) {
        setAttributeInternal(NCAID, value);
    }

    /**
     * Gets the attribute value for NcaIdParent, using the alias name NcaIdParent.
     * @return the NcaIdParent
     */
    public Number getNcaIdParent() {
        return (Number)getAttributeInternal(NCAIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NcaIdParent.
     * @param value value to set the NcaIdParent
     */
    public void setNcaIdParent(Number value) {
        setAttributeInternal(NCAIDPARENT, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CategoryCode, using the alias name CategoryCode.
     * @return the CategoryCode
     */
    public String getCategoryCode() {
        return (String)getAttributeInternal(CATEGORYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryCode.
     * @param value value to set the CategoryCode
     */
    public void setCategoryCode(String value) {
        setAttributeInternal(CATEGORYCODE, value);
    }

    /**
     * Gets the attribute value for PriorityOrder, using the alias name PriorityOrder.
     * @return the PriorityOrder
     */
    public Number getPriorityOrder() {
        return (Number)getAttributeInternal(PRIORITYORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriorityOrder.
     * @param value value to set the PriorityOrder
     */
    public void setPriorityOrder(Number value) {
        setAttributeInternal(PRIORITYORDER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getNewsCategories() {
        return (RowIterator)getAttributeInternal(NEWSCATEGORIES);
    }

    /**
     * @return the associated entity NewsCategoriesImpl.
     */
    public NewsCategoriesImpl getNcaIdParentNewsCategories() {
        return (NewsCategoriesImpl)getAttributeInternal(NCAIDPARENTNEWSCATEGORIES);
    }

    /**
     * Sets <code>value</code> as the associated entity NewsCategoriesImpl.
     */
    public void setNcaIdParentNewsCategories(NewsCategoriesImpl value) {
        setAttributeInternal(NCAIDPARENTNEWSCATEGORIES, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getNews() {
        return (RowIterator)getAttributeInternal(NEWS);
    }

    /**
     * @param ncaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number ncaId) {
        return new Key(new Object[]{ncaId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.vc.sasnmodel.entities.NewsCategories");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq= new SequenceImpl("NCA_SEQ", this.getDBTransaction());
        setNcaId(seq.getSequenceNumber());
    }
}
