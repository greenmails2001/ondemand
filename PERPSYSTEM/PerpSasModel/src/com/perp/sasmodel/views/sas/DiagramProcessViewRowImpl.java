package com.perp.sasmodel.views.sas;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 26 13:13:00 ICT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DiagramProcessViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DprId {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getDprId();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setDprId((Number)value);
            }
        }
        ,
        Name {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getName();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        ShortDesc {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getShortDesc();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setShortDesc((String)value);
            }
        }
        ,
        Description {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        ImagePath {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getImagePath();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setImagePath((String)value);
            }
        }
        ,
        OrderNo {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getOrderNo();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setOrderNo((Number)value);
            }
        }
        ,
        AppCode {
            public Object get(DiagramProcessViewRowImpl obj) {
                return obj.getAppCode();
            }

            public void put(DiagramProcessViewRowImpl obj, Object value) {
                obj.setAppCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DiagramProcessViewRowImpl object);

        public abstract void put(DiagramProcessViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DPRID = AttributesEnum.DprId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int SHORTDESC = AttributesEnum.ShortDesc.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int IMAGEPATH = AttributesEnum.ImagePath.index();
    public static final int ORDERNO = AttributesEnum.OrderNo.index();
    public static final int APPCODE = AttributesEnum.AppCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DiagramProcessViewRowImpl() {
    }

    /**
     * Gets DiagramProcesses entity object.
     * @return the DiagramProcesses
     */
    public EntityImpl getDiagramProcesses() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DPR_ID using the alias name DprId.
     * @return the DPR_ID
     */
    public Number getDprId() {
        return (Number) getAttributeInternal(DPRID);
    }

    /**
     * Sets <code>value</code> as attribute value for DPR_ID using the alias name DprId.
     * @param value value to set the DPR_ID
     */
    public void setDprId(Number value) {
        setAttributeInternal(DPRID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for SHORT_DESC using the alias name ShortDesc.
     * @return the SHORT_DESC
     */
    public String getShortDesc() {
        return (String) getAttributeInternal(SHORTDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for SHORT_DESC using the alias name ShortDesc.
     * @param value value to set the SHORT_DESC
     */
    public void setShortDesc(String value) {
        setAttributeInternal(SHORTDESC, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for IMAGE_PATH using the alias name ImagePath.
     * @return the IMAGE_PATH
     */
    public String getImagePath() {
        return (String) getAttributeInternal(IMAGEPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_PATH using the alias name ImagePath.
     * @param value value to set the IMAGE_PATH
     */
    public void setImagePath(String value) {
        setAttributeInternal(IMAGEPATH, value);
    }

    /**
     * Gets the attribute value for ORDER_NO using the alias name OrderNo.
     * @return the ORDER_NO
     */
    public Number getOrderNo() {
        return (Number) getAttributeInternal(ORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_NO using the alias name OrderNo.
     * @param value value to set the ORDER_NO
     */
    public void setOrderNo(Number value) {
        setAttributeInternal(ORDERNO, value);
    }

    /**
     * Gets the attribute value for APP_CODE using the alias name AppCode.
     * @return the APP_CODE
     */
    public String getAppCode() {
        return (String) getAttributeInternal(APPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for APP_CODE using the alias name AppCode.
     * @param value value to set the APP_CODE
     */
    public void setAppCode(String value) {
        setAttributeInternal(APPCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
