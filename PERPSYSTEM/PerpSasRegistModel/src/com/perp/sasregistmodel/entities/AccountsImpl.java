package com.perp.sasregistmodel.entities;

import com.oracle.adffwkextensions.utils.DateUtils;

import java.util.Random;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 08 13:49:28 ICT 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AccountsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AccId {
            public Object get(AccountsImpl obj) {
                return obj.getAccId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setAccId((Number)value);
            }
        }
        ,
        FullName {
            public Object get(AccountsImpl obj) {
                return obj.getFullName();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setFullName((String)value);
            }
        }
        ,
        ContactTelephone {
            public Object get(AccountsImpl obj) {
                return obj.getContactTelephone();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setContactTelephone((String)value);
            }
        }
        ,
        Email {
            public Object get(AccountsImpl obj) {
                return obj.getEmail();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        OrganizationName {
            public Object get(AccountsImpl obj) {
                return obj.getOrganizationName();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setOrganizationName((String)value);
            }
        }
        ,
        ProId {
            public Object get(AccountsImpl obj) {
                return obj.getProId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setProId((Number)value);
            }
        }
        ,
        Address {
            public Object get(AccountsImpl obj) {
                return obj.getAddress();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        TaxCode {
            public Object get(AccountsImpl obj) {
                return obj.getTaxCode();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setTaxCode((String)value);
            }
        }
        ,
        RolId {
            public Object get(AccountsImpl obj) {
                return obj.getRolId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setRolId((Number)value);
            }
        }
        ,
        NumberOfEmployee {
            public Object get(AccountsImpl obj) {
                return obj.getNumberOfEmployee();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setNumberOfEmployee((Number)value);
            }
        }
        ,
        CustomerApproach {
            public Object get(AccountsImpl obj) {
                return obj.getCustomerApproach();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setCustomerApproach((String)value);
            }
        }
        ,
        UserName {
            public Object get(AccountsImpl obj) {
                return obj.getUserName();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        Password {
            public Object get(AccountsImpl obj) {
                return obj.getPassword();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        ActivedCode {
            public Object get(AccountsImpl obj) {
                return obj.getActivedCode();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setActivedCode((String)value);
            }
        }
        ,
        CouId {
            public Object get(AccountsImpl obj) {
                return obj.getCouId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setCouId((Number)value);
            }
        }
        ,
        IndId {
            public Object get(AccountsImpl obj) {
                return obj.getIndId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setIndId((Number)value);
            }
        }
        ,
        Status {
            public Object get(AccountsImpl obj) {
                return obj.getStatus();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        SquId {
            public Object get(AccountsImpl obj) {
                return obj.getSquId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setSquId((Number)value);
            }
        }
        ,
        SecurityAnswer {
            public Object get(AccountsImpl obj) {
                return obj.getSecurityAnswer();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setSecurityAnswer((String)value);
            }
        }
        ,
        MmeId {
            public Object get(AccountsImpl obj) {
                return obj.getMmeId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setMmeId((Number)value);
            }
        }
        ,
        LabId {
            public Object get(AccountsImpl obj) {
                return obj.getLabId();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setLabId((Number)value);
            }
        }
        ,
        ActivatedFlag {
            public Object get(AccountsImpl obj) {
                return obj.getActivatedFlag();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setActivatedFlag((String)value);
            }
        }
        ,
        IsAdmin {
            public Object get(AccountsImpl obj) {
                return obj.getIsAdmin();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setIsAdmin((String)value);
            }
        }
        ,
        Countries {
            public Object get(AccountsImpl obj) {
                return obj.getCountries();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setCountries((EntityImpl)value);
            }
        }
        ,
        Industries {
            public Object get(AccountsImpl obj) {
                return obj.getIndustries();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setIndustries((EntityImpl)value);
            }
        }
        ,
        Labors {
            public Object get(AccountsImpl obj) {
                return obj.getLabors();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setLabors((EntityImpl)value);
            }
        }
        ,
        MarketingMedia {
            public Object get(AccountsImpl obj) {
                return obj.getMarketingMedia();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setMarketingMedia((EntityImpl)value);
            }
        }
        ,
        Provinces {
            public Object get(AccountsImpl obj) {
                return obj.getProvinces();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setProvinces((EntityImpl)value);
            }
        }
        ,
        Roles {
            public Object get(AccountsImpl obj) {
                return obj.getRoles();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setRoles((EntityImpl)value);
            }
        }
        ,
        SecurityQuestions {
            public Object get(AccountsImpl obj) {
                return obj.getSecurityQuestions();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setSecurityQuestions((EntityImpl)value);
            }
        }
        ,
        Subscriptions {
            public Object get(AccountsImpl obj) {
                return obj.getSubscriptions();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbisUserLoginHistories {
            public Object get(AccountsImpl obj) {
                return obj.getVbisUserLoginHistories();
            }

            public void put(AccountsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AccountsImpl object);

        public abstract void put(AccountsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACCID = AttributesEnum.AccId.index();
    public static final int FULLNAME = AttributesEnum.FullName.index();
    public static final int CONTACTTELEPHONE = AttributesEnum.ContactTelephone.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int ORGANIZATIONNAME = AttributesEnum.OrganizationName.index();
    public static final int PROID = AttributesEnum.ProId.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int TAXCODE = AttributesEnum.TaxCode.index();
    public static final int ROLID = AttributesEnum.RolId.index();
    public static final int NUMBEROFEMPLOYEE = AttributesEnum.NumberOfEmployee.index();
    public static final int CUSTOMERAPPROACH = AttributesEnum.CustomerApproach.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int ACTIVEDCODE = AttributesEnum.ActivedCode.index();
    public static final int COUID = AttributesEnum.CouId.index();
    public static final int INDID = AttributesEnum.IndId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int SQUID = AttributesEnum.SquId.index();
    public static final int SECURITYANSWER = AttributesEnum.SecurityAnswer.index();
    public static final int MMEID = AttributesEnum.MmeId.index();
    public static final int LABID = AttributesEnum.LabId.index();
    public static final int ACTIVATEDFLAG = AttributesEnum.ActivatedFlag.index();
    public static final int ISADMIN = AttributesEnum.IsAdmin.index();
    public static final int COUNTRIES = AttributesEnum.Countries.index();
    public static final int INDUSTRIES = AttributesEnum.Industries.index();
    public static final int LABORS = AttributesEnum.Labors.index();
    public static final int MARKETINGMEDIA = AttributesEnum.MarketingMedia.index();
    public static final int PROVINCES = AttributesEnum.Provinces.index();
    public static final int ROLES = AttributesEnum.Roles.index();
    public static final int SECURITYQUESTIONS = AttributesEnum.SecurityQuestions.index();
    public static final int SUBSCRIPTIONS = AttributesEnum.Subscriptions.index();
    public static final int VBISUSERLOGINHISTORIES = AttributesEnum.VbisUserLoginHistories.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AccountsImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.perp.sasregistmodel.entities.Accounts");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for AccId, using the alias name AccId.
     * @return the AccId
     */
    public Number getAccId() {
        return (Number)getAttributeInternal(ACCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccId.
     * @param value value to set the AccId
     */
    public void setAccId(Number value) {
        setAttributeInternal(ACCID, value);
    }

    /**
     * Gets the attribute value for FullName, using the alias name FullName.
     * @return the FullName
     */
    public String getFullName() {
        return (String)getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FullName.
     * @param value value to set the FullName
     */
    public void setFullName(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for ContactTelephone, using the alias name ContactTelephone.
     * @return the ContactTelephone
     */
    public String getContactTelephone() {
        return (String)getAttributeInternal(CONTACTTELEPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContactTelephone.
     * @param value value to set the ContactTelephone
     */
    public void setContactTelephone(String value) {
        setAttributeInternal(CONTACTTELEPHONE, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the Email
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for OrganizationName, using the alias name OrganizationName.
     * @return the OrganizationName
     */
    public String getOrganizationName() {
        return (String)getAttributeInternal(ORGANIZATIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrganizationName.
     * @param value value to set the OrganizationName
     */
    public void setOrganizationName(String value) {
        setAttributeInternal(ORGANIZATIONNAME, value);
    }

    /**
     * Gets the attribute value for ProId, using the alias name ProId.
     * @return the ProId
     */
    public Number getProId() {
        return (Number)getAttributeInternal(PROID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProId.
     * @param value value to set the ProId
     */
    public void setProId(Number value) {
        setAttributeInternal(PROID, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the Address
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for TaxCode, using the alias name TaxCode.
     * @return the TaxCode
     */
    public String getTaxCode() {
        return (String)getAttributeInternal(TAXCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxCode.
     * @param value value to set the TaxCode
     */
    public void setTaxCode(String value) {
        setAttributeInternal(TAXCODE, value);
    }

    /**
     * Gets the attribute value for RolId, using the alias name RolId.
     * @return the RolId
     */
    public Number getRolId() {
        return (Number)getAttributeInternal(ROLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RolId.
     * @param value value to set the RolId
     */
    public void setRolId(Number value) {
        setAttributeInternal(ROLID, value);
    }

    /**
     * Gets the attribute value for NumberOfEmployee, using the alias name NumberOfEmployee.
     * @return the NumberOfEmployee
     */
    public Number getNumberOfEmployee() {
        return (Number)getAttributeInternal(NUMBEROFEMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfEmployee.
     * @param value value to set the NumberOfEmployee
     */
    public void setNumberOfEmployee(Number value) {
        setAttributeInternal(NUMBEROFEMPLOYEE, value);
    }

    /**
     * Gets the attribute value for CustomerApproach, using the alias name CustomerApproach.
     * @return the CustomerApproach
     */
    public String getCustomerApproach() {
        return (String)getAttributeInternal(CUSTOMERAPPROACH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerApproach.
     * @param value value to set the CustomerApproach
     */
    public void setCustomerApproach(String value) {
        setAttributeInternal(CUSTOMERAPPROACH, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the Password
     */
    public String getPassword() {
        return (String)getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for ActivedCode, using the alias name ActivedCode.
     * @return the ActivedCode
     */
    public String getActivedCode() {
        return (String)getAttributeInternal(ACTIVEDCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivedCode.
     * @param value value to set the ActivedCode
     */
    public void setActivedCode(String value) {
        setAttributeInternal(ACTIVEDCODE, value);
    }

    /**
     * Gets the attribute value for CouId, using the alias name CouId.
     * @return the CouId
     */
    public Number getCouId() {
        return (Number)getAttributeInternal(COUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CouId.
     * @param value value to set the CouId
     */
    public void setCouId(Number value) {
        setAttributeInternal(COUID, value);
    }

    /**
     * Gets the attribute value for IndId, using the alias name IndId.
     * @return the IndId
     */
    public Number getIndId() {
        return (Number)getAttributeInternal(INDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IndId.
     * @param value value to set the IndId
     */
    public void setIndId(Number value) {
        setAttributeInternal(INDID, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for SquId, using the alias name SquId.
     * @return the SquId
     */
    public Number getSquId() {
        return (Number)getAttributeInternal(SQUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SquId.
     * @param value value to set the SquId
     */
    public void setSquId(Number value) {
        setAttributeInternal(SQUID, value);
    }

    /**
     * Gets the attribute value for SecurityAnswer, using the alias name SecurityAnswer.
     * @return the SecurityAnswer
     */
    public String getSecurityAnswer() {
        return (String)getAttributeInternal(SECURITYANSWER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SecurityAnswer.
     * @param value value to set the SecurityAnswer
     */
    public void setSecurityAnswer(String value) {
        setAttributeInternal(SECURITYANSWER, value);
    }

    /**
     * Gets the attribute value for MmeId, using the alias name MmeId.
     * @return the MmeId
     */
    public Number getMmeId() {
        return (Number)getAttributeInternal(MMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MmeId.
     * @param value value to set the MmeId
     */
    public void setMmeId(Number value) {
        setAttributeInternal(MMEID, value);
    }

    /**
     * Gets the attribute value for LabId, using the alias name LabId.
     * @return the LabId
     */
    public Number getLabId() {
        return (Number)getAttributeInternal(LABID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LabId.
     * @param value value to set the LabId
     */
    public void setLabId(Number value) {
        setAttributeInternal(LABID, value);
    }

    /**
     * Gets the attribute value for ActivatedFlag, using the alias name ActivatedFlag.
     * @return the ActivatedFlag
     */
    public String getActivatedFlag() {
        return (String)getAttributeInternal(ACTIVATEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivatedFlag.
     * @param value value to set the ActivatedFlag
     */
    public void setActivatedFlag(String value) {
        setAttributeInternal(ACTIVATEDFLAG, value);
    }

    /**
     * Gets the attribute value for IsAdmin, using the alias name IsAdmin.
     * @return the IsAdmin
     */
    public String getIsAdmin() {
        return (String)getAttributeInternal(ISADMIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsAdmin.
     * @param value value to set the IsAdmin
     */
    public void setIsAdmin(String value) {
        setAttributeInternal(ISADMIN, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCountries() {
        return (EntityImpl)getAttributeInternal(COUNTRIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCountries(EntityImpl value) {
        setAttributeInternal(COUNTRIES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getIndustries() {
        return (EntityImpl)getAttributeInternal(INDUSTRIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setIndustries(EntityImpl value) {
        setAttributeInternal(INDUSTRIES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getLabors() {
        return (EntityImpl)getAttributeInternal(LABORS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLabors(EntityImpl value) {
        setAttributeInternal(LABORS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getMarketingMedia() {
        return (EntityImpl)getAttributeInternal(MARKETINGMEDIA);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMarketingMedia(EntityImpl value) {
        setAttributeInternal(MARKETINGMEDIA, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getProvinces() {
        return (EntityImpl)getAttributeInternal(PROVINCES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setProvinces(EntityImpl value) {
        setAttributeInternal(PROVINCES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getRoles() {
        return (EntityImpl)getAttributeInternal(ROLES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setRoles(EntityImpl value) {
        setAttributeInternal(ROLES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getSecurityQuestions() {
        return (EntityImpl)getAttributeInternal(SECURITYQUESTIONS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSecurityQuestions(EntityImpl value) {
        setAttributeInternal(SECURITYQUESTIONS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSubscriptions() {
        return (RowIterator)getAttributeInternal(SUBSCRIPTIONS);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbisUserLoginHistories() {
        return (RowIterator)getAttributeInternal(VBISUSERLOGINHISTORIES);
    }


    /**
     * @param accId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number accId) {
        return new Key(new Object[]{accId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation == DML_INSERT) {        
          SequenceImpl seq =
              new SequenceImpl("ACC_SEQ", this.getDBTransaction());
          Number accId = seq.getSequenceNumber();
          Long activeCode = new Random().nextLong();
          this.setAccId(accId);           
          this.setActivedCode(""+activeCode);
        }
        super.doDML(operation, e);
        
    }
}
